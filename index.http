# User registration (POST)
POST http://localhost:3000/api/user/register
Content-Type: application/json

{
  "email": "user@example.com",
  "password": "Password1!"
}

# Response 201 with user data and JWT token
# Error 409 if you try to register an already existing and verified email
# Errors 400 if email or password don't meet validations

# Email validation (PUT)
PUT http://localhost:3000/api/user/validation
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjdkY2E3NWVjNmYwODFiNGE2OTVkMDU0IiwiZW1haWwiOiJlbWFpbEBlamVtcGxvLmNvbSIsInJvbGUiOiJ1c2VyIn0sImlhdCI6MTc0MjUxNDAxNCwiZXhwIjoxNzQyNjAwNDE0fQ.rB1E5E5xOZTHEe4Z1-DQCDNhTULjCcjO1TNhugsQI94

{
  "code": "123456"  // The code generated during registration
}

# Response 200 if the code is correct
# Error 400 if the code is incorrect or attempts have been exhausted

# Login (POST)
POST http://localhost:3000/api/user/login
Content-Type: application/json

{
  "email": "user@example.com",
  "password": "Password1!"
}

# Response 200 with user data and JWT token
# Error 401 if credentials are incorrect
# Error 400 if email is not verified

# Onboarding - Personal data (PUT)
PUT http://localhost:3000/api/user
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjdkY2E3NWVjNmYwODFiNGE2OTVkMDU0IiwiZW1haWwiOiJlbWFpbEBlamVtcGxvLmNvbSIsInJvbGUiOiJ1c2VyIn0sImlhdCI6MTc0MjUxNDAxNCwiZXhwIjoxNzQyNjAwNDE0fQ.rB1E5E5xOZTHEe4Z1-DQCDNhTULjCcjO1TNhugsQI94

{
  "firstName": "Maria",
  "lastName": "Marta",
  "nif": "12345678Z"
}

# Response 200 with updated data
# Validation errors if data doesn't meet requirements

# Onboarding - Company data (PATCH)
PATCH http://localhost:3000/api/user/company
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjdkY2E3NWVjNmYwODFiNGE2OTVkMDU0IiwiZW1haWwiOiJlbWFpbEBlamVtcGxvLmNvbSIsInJvbGUiOiJ1c2VyIn0sImlhdCI6MTc0MjUxNDAxNCwiZXhwIjoxNzQyNjAwNDE0fQ.rB1E5E5xOZTHEe4Z1-DQCDNhTULjCcjO1TNhugsQI94

{
    "company": {
    "name": "My Company SL",
    "cif": "B12345678",
    "address": {
        "street": "Main Street 123",
        "city": "Madrid",
        "postalCode": "28001"
    },
        "isAutonomous": false
    }
}

# Response 200 with updated data
# For autonomous workers, verifies that it uses personal data

# Logo (PATCH)
PATCH http://localhost:3000/api/user/logo
Authorization: Bearer YOUR_JWT_TOKEN
Content-Type: multipart/form-data

logo: [image file]

# Response 200 with saved logo URL
# Error if file is not an image or exceeds allowed size

# Get current user (GET)
GET http://localhost:3000/api/user
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjdkY2E3NWVjNmYwODFiNGE2OTVkMDU0IiwiZW1haWwiOiJlbWFpbEBlamVtcGxvLmNvbSIsInJvbGUiOiJ1c2VyIn0sImlhdCI6MTc0MjUxNDAxNCwiZXhwIjoxNzQyNjAwNDE0fQ.rB1E5E5xOZTHEe4Z1-DQCDNhTULjCcjO1TNhugsQI94

# Response 200 with user data

# Delete user (DELETE)
DELETE http://localhost:3000/api/user?soft=true
Authorization: Bearer YOUR_JWT_TOKEN

# Response 200 confirming deletion
# Change soft=true to soft=false to test permanent deletion

# Password recovery
POST http://localhost:3000/api/user/recover-password
Content-Type: application/json

{
  "email": "user@example.com"
}

# After receiving the code
POST http://localhost:3000/api/user/reset-password
Content-Type: application/json

{
  "email": "user@example.com",
  "code": "123456",
  "newPassword": "NewPassword1!"
}

# Invite teammates
POST http://localhost:3000/api/user/invite
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjdkY2E3NWVjNmYwODFiNGE2OTVkMDU0IiwiZW1haWwiOiJlbWFpbEBlamVtcGxvLmNvbSIsInJvbGUiOiJ1c2VyIn0sImlhdCI6MTc0MjUxNDAxNCwiZXhwIjoxNzQyNjAwNDE0fQ.rB1E5E5xOZTHEe4Z1-DQCDNhTULjCcjO1TNhugsQI94

{
  "email": "guest@example.com",
  "role": "guest"
}
